@function breakpoint($name) {
	@return map-get($grid-breakpoints, $name);
}

@mixin media($breakpoint) {
	@media screen and (min-width: breakpoint($breakpoint)) {
		@content;
	}
}

@mixin mediaMobileXS {
	@media screen and (max-width: 400px) {
		@content;
	}
}

@mixin opacityAnim {
	@keyframes animation {
		0% {
			opacity: 1;
		}

		100% {
			opacity: var(--hover-opacity);
		}
	}

	transition: var(--time);

	&:active {
		animation: animation var(--time);
	}

	@media (hover: hover) {
		&:hover {
			opacity: var(--hover-opacity);
		}
	}
}

@mixin likeAnim {
	@keyframes animation {
		0% {
			opacity: 1;
		}

		100% {
			opacity: var(--hover-opacity);
		}
	}

	transition: var(--time);

	&:active {
		animation: animation var(--time);
	}

	@media (hover: hover) {
		&:hover {
			opacity: var(--hover-opacity);
		}
	}
}

@mixin rounded-table-borders() {
	$border: 1px solid #b9b9ba;
	border-radius: 0.625rem;
	border-spacing: 0;
	border: $border;
	border-collapse: inherit; // Very important, having this set to collapse will break border-radius

	th,
	td {
		border: $border;
	}

	// The bottom borders of table cells will be used as the borders between rows
	tr + tr th,
	tr + tr td {
		border-top: 0;
	}

	// The right borders of table cells will be used as the borders between columns
	th + th,
	th + td,
	td + th,
	td + td {
		border-left: 0;
	}

	// Remove the outer edge borders from the table cells, as the <table> element will have the border property set for the outside
	th:first-child,
	td:first-child {
		border-left: 0;
	}

	th:last-child,
	td:last-child {
		border-right: 0;
	}

	tr:first-child th,
	tr:first-child td {
		border-top: 0;
	}

	tr:last-child th,
	tr:last-child td {
		border-bottom: 0;
	}
}
